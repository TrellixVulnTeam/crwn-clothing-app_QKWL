{"ast":null,"code":"import { takeEvery, call, put } from \"redux-saga/effects\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsFailure, fetchCollectionsSuccess } from \"./shop.actions\";\nimport ShopActionTypes from \"./shop.types\";\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am fired.');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  } // collectionRef\n  // .get()\n  // .then(snapshot => {\n  //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //   dispatch(fetchCollectionsSuccess(collectionsMap));\n  //   this.setState({ loading: false });\n  // })\n  // .catch(error => dispatch(fetchCollectionsFailure(error.message)))\n  // }\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/Users/Salat Abdi/Desktop/React-apps/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","firestore","convertCollectionsSnapshotToMap","fetchCollectionsFailure","fetchCollectionsSuccess","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMC,OAAO,CAACC,GAAR,CAAY,aAAZ,CAAN;;AAEA,MAAG;AACC,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMd,IAAI,CAACG,+BAAD,EAAkCS,QAAlC,CAAjC;AACA,UAAMX,GAAG,CAACI,uBAAuB,CAACS,cAAD,CAAxB,CAAT;AACH,GALD,CAKC,OAAMC,KAAN,EAAY;AACT,UAAMd,GAAG,CAACG,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH,GAVoC,CAcrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;;AACC;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMlB,SAAS,CACXO,eAAe,CAACY,uBADL,EAEXX,qBAFW,CAAf;AAIH","sourcesContent":["import { takeEvery, call, put } from \"redux-saga/effects\";\r\n\r\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\r\n\r\nimport { fetchCollectionsFailure, fetchCollectionsSuccess } from \"./shop.actions\";\r\n\r\nimport ShopActionTypes from \"./shop.types\";\r\n\r\nexport function* fetchCollectionsAsync() {\r\n    yield console.log('I am fired.');\r\n\r\n    try{\r\n        const collectionRef = firestore.collection('collections');\r\n        const snapshot = yield collectionRef.get();\r\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\r\n        yield put(fetchCollectionsSuccess(collectionsMap))\r\n    }catch(error){\r\n        yield put(fetchCollectionsFailure(error.message))\r\n    }\r\n\r\n    \r\n\r\n    // collectionRef\r\n    // .get()\r\n    // .then(snapshot => {\r\n    //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n    //   dispatch(fetchCollectionsSuccess(collectionsMap));\r\n    //   this.setState({ loading: false });\r\n    // })\r\n    // .catch(error => dispatch(fetchCollectionsFailure(error.message)))\r\n// }\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n    yield takeEvery(\r\n        ShopActionTypes.FETCH_COLLECTIONS_START,\r\n        fetchCollectionsAsync\r\n        );\r\n}"]},"metadata":{},"sourceType":"module"}