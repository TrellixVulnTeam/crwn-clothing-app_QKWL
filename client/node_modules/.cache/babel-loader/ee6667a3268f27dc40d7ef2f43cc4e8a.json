{"ast":null,"code":"import { takeEvery, call, put } from \"redux-saga/effects\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"./shop.actions\";\nimport ShopActionTypes from \"./shop.types\";\nexport function* fetchCollectionsAsync() {// try {\n  //     const collectionRef = firestore.collection('collections');\n  //     const snapshot = yield collectionRef.get();\n  //     const collectionsMap = yield call( convertCollectionsSnapshotToMap,snapshot );\n  //     yield put(fetchCollectionsSuccess(collectionsMap));\n  // } catch (error) {\n  //     yield put(fetchCollectionsFailure(error.message));\n  // }\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/Users/Salat Abdi/Desktop/React-apps/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC,CAErC;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEH;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMT,SAAS,CACXO,eAAe,CAACG,uBADL,EAEXF,qBAFW,CAAf;AAIH","sourcesContent":["import { takeEvery, call, put } from \"redux-saga/effects\";\r\n\r\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\r\n\r\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"./shop.actions\";\r\n\r\nimport ShopActionTypes from \"./shop.types\";\r\n\r\nexport function* fetchCollectionsAsync() {\r\n   \r\n    // try {\r\n    //     const collectionRef = firestore.collection('collections');\r\n    //     const snapshot = yield collectionRef.get();\r\n    //     const collectionsMap = yield call( convertCollectionsSnapshotToMap,snapshot );\r\n        \r\n    //     yield put(fetchCollectionsSuccess(collectionsMap));\r\n    // } catch (error) {\r\n    //     yield put(fetchCollectionsFailure(error.message));\r\n    // }\r\n    \r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n    yield takeEvery(\r\n        ShopActionTypes.FETCH_COLLECTIONS_START,\r\n        fetchCollectionsAsync\r\n        );\r\n}"]},"metadata":{},"sourceType":"module"}