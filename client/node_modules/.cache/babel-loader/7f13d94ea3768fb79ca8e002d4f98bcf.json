{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Salat Abdi\\\\Desktop\\\\React-apps\\\\crwn-clothing\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport { SignInContainer, ButtonDiv, TitleHead } from './sign-in.style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = _ref => {\n  _s();\n\n  let {\n    emailSignInStart,\n    googleSignInStart\n  } = _ref;\n  const {\n    userCredentials,\n    setUserCredentials\n  } = useState({\n    email: '',\n    password: ''\n  });\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      email,\n      password\n    } = userCredentials;\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserCredentials({\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(SignInContainer, {\n    children: [/*#__PURE__*/_jsxDEV(TitleHead, {\n      children: \"I already have an account.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"email\",\n        type: \"email\",\n        value: user.email,\n        handleChange: handleChange,\n        label: \"email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"password\",\n        type: \"password\",\n        value: this.state.password,\n        handleChange: handleChange,\n        label: \"password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ButtonDiv, {\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \" Sign in \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"button\",\n          onClick: googleSignInStart,\n          isGoogleSignIn: true,\n          children: [\" \", ' ', \"Sign in With Google \", ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 13\n  }, this);\n};\n\n_s(SignIn, \"n4e4PeXla5VN8dvE/2rP9cZfJNQ=\");\n\n_c = SignIn;\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["C:/Users/Salat Abdi/Desktop/React-apps/crwn-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignInContainer","ButtonDiv","TitleHead","SignIn","userCredentials","setUserCredentials","email","password","handleSubmit","event","preventDefault","handleChange","name","value","target","user","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport FormInput from \"../form-input/form-input.component\";\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\n\r\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\r\n\r\nimport { SignInContainer, ButtonDiv,TitleHead } from './sign-in.style';\r\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\r\n\r\n    const {userCredentials, setUserCredentials } = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n        \r\n        const { email, password } = userCredentials;\r\n\r\n        emailSignInStart(email, password);\r\n    }\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target;\r\n\r\n        setUserCredentials({ [name]: value })\r\n    }\r\n\r\n        return (\r\n            <SignInContainer>\r\n                <TitleHead>I already have an account.</TitleHead>\r\n                <span>Sign in with your email and password</span>\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                    <FormInput \r\n                    name=\"email\" \r\n                    type=\"email\" \r\n                    value= {user.email} \r\n                    handleChange={handleChange} \r\n                    label='email'\r\n                    required/>\r\n                   \r\n                    <FormInput \r\n                    name=\"password\" \r\n                    type=\"password\" \r\n                    value= {this.state.password} \r\n                    handleChange={handleChange} \r\n                    label='password'\r\n                    required/>\r\n                    <ButtonDiv>\r\n                        \r\n                    <CustomButton type=\"submit\"> Sign in </CustomButton>\r\n                    <CustomButton type=\"button\" onClick={ googleSignInStart } isGoogleSignIn> {' '}\r\n                    Sign in With Google {' '}\r\n                    </CustomButton>\r\n                    \r\n                    </ButtonDiv>\r\n\r\n\r\n                </form>\r\n            </SignInContainer>\r\n        )\r\n    }\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password}))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}