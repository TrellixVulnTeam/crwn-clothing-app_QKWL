{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Salat Abdi\\\\Desktop\\\\React-apps\\\\crwn-clothing\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { signUpStart } from \"../../redux/user/user.actions\";\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = _ref => {\n  _s();\n\n  let {\n    signUpStart\n  } = _ref;\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(SignUpContainer, {\n    children: [/*#__PURE__*/_jsxDEV(SignUpTitle, {\n      children: \"I do not have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign up with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        name: \"displayName\",\n        value: displayName,\n        onChange: handleChange,\n        label: \"Display Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        onChange: handleChange,\n        label: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        onChange: handleChange,\n        label: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"confirmPassword\",\n        value: confirmPassword,\n        onChange: handleChange,\n        label: \"Confirm Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        type: \"submit\",\n        children: \" SIGN UP \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 13\n  }, this);\n};\n\n_s(SignUp, \"ujSM/qLZNUQ/r2sRiUfGIIdki/w=\");\n\n_c = SignUp;\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["C:/Users/Salat Abdi/Desktop/React-apps/crwn-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignUpContainer","SignUpTitle","SignUp","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","handleChange","name","value","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport FormInput from \"../form-input/form-input.component\";\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\n\r\nimport { signUpStart } from \"../../redux/user/user.actions\";\r\n\r\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles';\r\n\r\nconst SignUp = ({ signUpStart }) => {\r\n    const [ userCredentials, setUserCredentials ] = useState({\r\n        displayName: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    });\r\n\r\n    const { displayName, email, password, confirmPassword } = userCredentials;\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault ();\r\n\r\n        if ( password !== confirmPassword) {\r\n            alert(\"passwords don't match\");\r\n            return;\r\n        }\r\n\r\n        signUpStart({ displayName, email, password});\r\n    };\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target;\r\n\r\n        setUserCredentials({ ...userCredentials, [name]: value });\r\n    };\r\n\r\n        return (\r\n            <SignUpContainer>\r\n                <SignUpTitle>I do not have an account</SignUpTitle>\r\n                <span>Sign up with your email and password</span>\r\n\r\n                <form className=\"sign-up-form\" onSubmit={this.handleSubmit}>\r\n                    <FormInput\r\n                    type=\"text\"\r\n                    name=\"displayName\"\r\n                    value= {displayName}\r\n                    onChange={handleChange}\r\n                    label= \"Display Name\"\r\n                    required />\r\n\r\n                    <FormInput\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value= {email}\r\n                    onChange={handleChange}\r\n                    label= \"Email\"\r\n                    required />\r\n\r\n                    <FormInput\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value= {password}\r\n                    onChange={handleChange}\r\n                    label= \"Password\"\r\n                    required />\r\n\r\n                    <FormInput\r\n                    type=\"password\"\r\n                    name=\"confirmPassword\"\r\n                    value= {confirmPassword}\r\n                    onChange={handleChange}\r\n                    label= \"Confirm Password\"\r\n                    required />\r\n\r\n                    <CustomButton type=\"submit\"> SIGN UP </CustomButton>\r\n                </form>\r\n            </SignUpContainer>\r\n        )\r\n    }\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}